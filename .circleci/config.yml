# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details

version: 2
jobs:
  build:
    docker:
      - image: node:12
        environment:
          DATABASE_URL: postgres://postgres:CHANGE-ME@postgres:5432/postgres
          TEST_DATABASE_URL: postgres://postgres:CHANGE-ME@postgres:5432/postgres

      - image: kartoza/postgis:12.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: "CHANGE-ME"
        name: postgres

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: apt update
      - run: apt install -y sudo
      - run: sudo apt install -y libnetcdf-dev
      - run: yarn install --ignore-engines
      - run:
          name: Check yarn.lock
          command: git diff --exit-code yarn.lock

      - save_cache:
          paths:
            - node_modules
            - packages/website/node_modules
            - packages/api/node_modules
            - /usr/local/share/.cache/yarn/v4/
          key: v2-dependencies-{{ checksum "yarn.lock" }}

      - run:
          name: Install psql
          command: apt-get update && apt-get install -y postgresql-client

      # Ensure that all migrations succeed
      - run: cd packages/api && yarn migration:run

      # Run tests
      # This could also be run using lerna: `yarn test` in the main repo, but doing it
      # explicitly like this separates out the tasks nicely in the UI.
      - run: cd packages/api && yarn test
      - run: cd packages/website && yarn test

      - run: yarn lint:all

      # Ensure that a normal build succeeds
      - run: yarn build
      - run: cd packages/api && yarn build:cloud-functions

