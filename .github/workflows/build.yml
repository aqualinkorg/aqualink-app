# for comment on PR, follow instruction for: https://github.com/marketplace/actions/sticky-pull-request-comment
name: Aqualink CI

on:
  # Run on all pull requests and on pushes to main.
  pull_request:
  push:
    branches:
      - master

jobs:
  build_dependencies:
    name: Build dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

       - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies if needed.
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install --ignore-engines --frozen-lockfile

  website_test_build_and_deploy:
    needs: build_dependencies
    runs-on: ubuntu-latest
    env:
      surge_url: aqualink-app-${{ github.event.pull_request.number }}.surge.sh
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run website lint
        if: success() || failure()
        run: cd packages/website && yarn lint

      - name: Run website tests
        if: success() || failure()
        run: cd packages/website && yarn test

      - name: Build website
        id: build_website
        if: success() || failure()
        run: cd packages/website && yarn build

      - name: Deploy on surge
        if: steps.build_website.outcome == 'success'
        uses: dswistowski/surge-sh-action@v1
        with:
          domain: ${{ env.surge_url }}
          project: "packages/website/build/."
          login: ${{ secrets.surge_login }}
          token: ${{ secrets.surge_token }}
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"
      - name: Comment PR
        uses: marocchino/sticky-pull-request-comment@v1
        continue-on-error: true
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Build succeeded and deployed at https://${{ env.surge_url }} 
            (hash ${{ github.event.pull_request.head.sha }} deployed at ${{ steps.date.outputs.date }})
  
  api_test_and_build:
    needs: build_dependencies
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
      TEST_DATABASE_URL: postgres://postgres:postgres@postgres:5432/postgres
    services:
      postgres:
        image: kartoza/postgis:12.1
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Run API lint
        if: success() || failure()
        run: cd packages/api && yarn lint
      
      - name: Build API
        if: success() || failure()
        run: cd packages/api && yarn build

      - name: Run database migrations
        id: migrations
        if: success() || failure()
        run: cd packages/api && yarn migration:run

      - name: Run API tests
        if: steps.migrations.outcome == 'success'
        run: cd packages/api && yarn test

  