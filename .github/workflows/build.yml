# for comment on PR, follow instruction for: https://github.com/marketplace/actions/sticky-pull-request-comment
name: Aqualink CI

on:
  # Run on all pull requests and on pushes to main.
  pull_request:
  push:
    branches:
      - master

env:
  DATABASE_URL: postgres://postgres:CHANGE-ME@postgres:5432/postgres
  TEST_DATABASE_URL: postgres://postgres:CHANGE-ME@postgres:5432/postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: postgres
  POSTGRES_PASSWORD: "CHANGE-ME"

jobs:
  build_dependencies:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download and cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: v6-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Install psql
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Install dependencies
        run: yarn install --ignore-engines --frozen-lockfile --no-optional

      - name: Save dependencies cache
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            packages/website/node_modules
            packages/api/node_modules
            /usr/local/share/.cache/yarn/v4/
          key: v6-dependencies-${{ hashFiles('yarn.lock') }}

  lint_all:
    runs-on: ubuntu-latest
    needs: build_dependencies

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download and cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: v6-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Run lint
        run: yarn lint:all

  test_website:
    runs-on: ubuntu-latest
    needs: build_dependencies

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download and cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: v6-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Concatenate spec files
        run: find -wholename "./**/*.spec.ts" -exec cat "{}" + > /tmp/all-tests.spec.txt

      - name: Run website tests
        run: cd packages/website && yarn test

  test_api:
    runs-on: ubuntu-latest
    needs: build_dependencies

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download and cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: v6-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Install psql
        run: sudo apt-get update && sudo apt-get install -y postgresql-client

      - name: Concatenate spec files
        run: find -wholename "./**/*.spec.ts" -exec cat "{}" + > /tmp/all-tests.spec.txt

      - name: Run database migrations
        run: cd packages/api && yarn migration:run

      - name: Restore API jest cache
        uses: actions/cache@v2
        with:
          path: packages/api/.jest-cache
          key: v1-test-${{ hashFiles('/tmp/all-tests.spec.txt') }}

      - name: Run API tests
        run: cd packages/api && yarn test

      - name: Save test cache
        uses: actions/cache@v2
        with:
          path: packages/api/.jest-cache
          key: v1-test-${{ hashFiles('/tmp/all-tests.spec.txt') }}

  build_app:
    runs-on: ubuntu-latest
    needs: build_dependencies

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download and cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: v6-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Build app
        run: yarn build

      - name: Build cloud functions
        run: cd packages/api && yarn build:cloud-functions

  deploy_website:
    runs-on: ubuntu-latest
    needs: test_website

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download and cache dependencies
        uses: actions/cache@v2
        with:
          path: node_modules
          key: v6-dependencies-${{ hashFiles('yarn.lock') }}

      - name: Build website
        run: cd packages/website && yarn build

      - name: Deploy website
        run: cd packages/website && yarn surge --project ./build --domain aqualink-app-${{ github.event.pull_request.number }}.surge.sh

      - name: Comment PR
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
            Build succeeded and deployed at http://aqualink-app-${{ github.event.pull_request.number }}.surge.sh 
            (hash ${{ github.event.pull_request.head.sha }} deployed at ${{ steps.date.outputs.date }})

