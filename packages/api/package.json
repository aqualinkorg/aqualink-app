{
  "name": "api",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": "18"
  },
  "scripts": {
    "prebuild": "rimraf dist",
    "build": "nest build -p tsconfig.build.json --tsc",
    "build:cloud-functions": "node cloud-functions/add-entities.js && tsc -p ./cloud-functions/tsconfig.json && cp -rf ./assets ./cloud-functions/dist/assets",
    "gcp-build": "npm install yarn",
    "predeploy:app": "mv .env .env.bkp && cp .env.${DEPLOY_ENV} .env && yarn run build && cp ../../yarn.lock .",
    "deploy:app": "gcloud app deploy app-${DEPLOY_ENV}.yaml && yarn migration:run",
    "postdeploy:app": "rm yarn.lock && mv .env.bkp .env",
    "deploy:prod": "export DEPLOY_ENV=prod && yarn deploy:app && yarn deploy:cloud-functions",
    "deploy:staging": "export DEPLOY_ENV=staging && yarn deploy:app && yarn deploy:cloud-functions:staging",
    "deploy:programize": "export DEPLOY_ENV=programize && yarn deploy:app && yarn deploy:cloud-functions:programize",
    "deploy:cloud-functions": "yarn build:cloud-functions && firebase deploy --only functions:pingService,functions:scheduledDailyUpdate,functions:scheduledSpotterTimeSeriesUpdate,functions:scheduledWindWaveTimeSeriesUpdate,functions:scheduledSSTTimeSeriesUpdate,functions:scheduledVideoStreamsCheck,functions:scheduledBuoysStatusCheck,functions:scheduledNOAALocationUpdate",
    "deploy:cloud-functions:prod": "yarn deploy:cloud-functions -P ocean-systems",
    "deploy:cloud-functions:staging": "yarn deploy:cloud-functions -P aqualink-dev",
    "deploy:cloud-functions:programize": "yarn deploy:cloud-functions -P aqualink-programize",
    "config:cloud-functions": "firebase functions:config:set $(ts-node functionsConfig.ts)",
    "config:cloud-functions:prod": "yarn config:cloud-functions -P ocean-systems",
    "config:cloud-functions:staging": "yarn config:cloud-functions -P aqualink-dev",
    "config:cloud-functions:programize": "yarn config:cloud-functions -P aqualink-programize",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "yarn run start:prod",
    "start:dev": "cp .env.local .env && nodemon --config nodemon.json",
    "start:dev:db": "docker-compose up",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main.js",
    "lint": "eslint \"{src,apps,libs,test,scripts}/**/*.{ts,js}\" --max-warnings 0",
    "test": "cross-env NODE_ENV=test jest --config ./test/jest.json --silent",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "ts-node $(yarn bin typeorm) -d ormconfig.ts",
    "migration:generate": "yarn typeorm migration:generate",
    "migration:run": "yarn typeorm migration:run --transaction each",
    "migration:revert": "yarn typeorm migration:revert",
    "hashId": "ts-node -r dotenv/config scripts/url-hash.ts toHash",
    "hashId:prod": "DOTENV_CONFIG_PATH=.env.prod ts-node -r dotenv/config scripts/url-hash.ts toHash",
    "hashId:staging": "DOTENV_CONFIG_PATH=.env.staging ts-node -r dotenv/config scripts/url-hash.ts toHash",
    "unhashId": "ts-node -r dotenv/config scripts/url-hash.ts toId",
    "unhashId:prod": "DOTENV_CONFIG_PATH=.env.prod ts-node -r dotenv/config scripts/url-hash.ts toId",
    "unhashId:staging": "DOTENV_CONFIG_PATH=.env.staging ts-node -r dotenv/config scripts/url-hash.ts toId",
    "typeorm-seeding": "ts-node $(yarn bin typeorm-seeding)",
    "seed:config": "yarn typeorm-seeding config",
    "seed:run": "yarn typeorm-seeding seed",
    "daily-worker": "ts-node -r dotenv/config scripts/daily-update.ts",
    "backfill-daily-data": "ts-node -r dotenv/config scripts/backfill-daily-data.ts",
    "augment-sites": "ts-node -r dotenv/config scripts/augment-site-data.ts",
    "upload-hobo-data": "ts-node -r dotenv/config scripts/upload-hobo-data.ts",
    "upload-sonde-data": "ts-node -r dotenv/config scripts/upload-sonde-data.ts",
    "upload-hui-data": "ts-node -r dotenv/config scripts/upload-hui-data.ts",
    "backfill-sofar-time-series": "ts-node -r dotenv/config scripts/backfill-sofar-time-series.ts",
    "update-wind-wave-data": "ts-node -r dotenv/config scripts/hindcast-wind-wave-data.ts",
    "resize-survey-images": "ts-node -r dotenv/config scripts/resize-survey-images.ts",
    "stormglass-csv": "ts-node -r dotenv/config scripts/generate-stormglass-csv.ts",
    "fill-noaa-nearest-point": "ts-node -r dotenv/config scripts/noaa-availability.ts",
    "check-video-streams": "ts-node -r dotenv/config scripts/check-video-streams.ts"
  },
  "dependencies": {
    "@google-cloud/storage": "^6.11.0",
    "@googlemaps/google-maps-services-js": "^3.3.41",
    "@nestjs/common": "^9.3.9",
    "@nestjs/core": "^9.3.9",
    "@nestjs/passport": "^9.0.3",
    "@nestjs/platform-express": "^9.3.9",
    "@nestjs/schedule": "^3.0.3",
    "@nestjs/swagger": "^6.3.0",
    "@nestjs/typeorm": "^9.0.1",
    "@turf/turf": "^6.5.0",
    "@types/bluebird": "^3.5.32",
    "@types/node-xlsx": "^0.15.3",
    "axios": "^1.6.0",
    "axios-retry": "^3.8.1",
    "bluebird": "^3.7.2",
    "class-transformer": "^0.3.1",
    "class-validator": "^0.14.0",
    "csv-parse": "^4.15.1",
    "csv-stringify": "^6.4.0",
    "express": "^4.17.1",
    "firebase-admin": "^11.9.0",
    "geo-tz": "^6.0.0",
    "geojson": "^0.5.0",
    "geotiff": "^1.0.4",
    "hashids": "^2.2.1",
    "lodash": "^4.17.15",
    "luxon": "^3.3.0",
    "md5-file": "^5.0.0",
    "multer": "^1.4.2",
    "node-xlsx": "^0.17.2",
    "objects-to-csv": "^1.3.6",
    "passport": "^0.6.0",
    "passport-custom": "^1.1.1",
    "pg": "^8.2.1",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7",
    "sharp": "^0.32.6",
    "ts-exif-parser": "^0.2.1",
    "typeorm": "^0.3.14",
    "typeorm-naming-strategies": "^1.1.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^9.3.9",
    "@nestjs/schematics": "^9.1.0",
    "@nestjs/testing": "^9.3.9",
    "@types/express": "^4.17.13",
    "@types/faker": "^4.1.12",
    "@types/jest": "29.5.6",
    "@types/lodash": "^4.14.156",
    "@types/luxon": "^3.3.1",
    "@types/multer": "^1.4.3",
    "@types/node": "^18.16.16",
    "@types/passport": "^1.0.4",
    "@types/passport-strategy": "^0.2.35",
    "@types/sharp": "^0.30.4",
    "@types/supertest": "2.0.12",
    "@types/ungap__structured-clone": "^0.3.0",
    "faker": "^4.1.0",
    "firebase-admin": "^11.9.0",
    "firebase-functions": "^3.8.0",
    "glob": "^7.1.6",
    "jest": "^29.7.0",
    "nodemon": "^2.0.4",
    "rimraf": "^3.0.2",
    "supertest": "6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^8.10.2",
    "tsconfig-paths": "^3.9.0",
    "typeorm-seeding": "^1.6.1",
    "yargs": "^15.4.1"
  },
  "optionalDependencies": {
    "netcdf4": "https://github.com/ovio-forks/netcdf4"
  }
}
